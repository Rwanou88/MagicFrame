# ESPHOME SETTINGS / PARAMÈTRES ESPHOME
esphome:
  name: magicframe
  friendly_name: MagicFrame
  platform: ESP32
  board: esp32dev
  on_boot:
  - delay: 20s
  - script.execute: update_screen

# ENABLE LOGGING / ACTIVER LA JOURNALISATION
logger:

# ENABLE HOME ASSISTANT API - ACTIVER L'API HOME ASSISTANT
api:
  encryption:
    key: !secret MF_api_key

ota:
  platform: esphome

# WIFI SETTINGS / PARAMÈTRES WIFI
wifi:
  ssid: !secret MF_wifi_ssid
  password: !secret MF_wifi_password
  # If you want a static IP (recommended - You will need to perform the first installation from Esphome via USB)
  # Si vous souhaitez une IP statique (recommandé - Vous devrez effectuer la première installation depuis Esphome via USB)
  manual_ip:
    static_ip: 192.168.1.100
    gateway: 192.168.1.1
    subnet: 255.255.255.0
  # Enable fallback hotspot (captive portal) in case wifi connection fails / Activer le point d'accès de secours (portail captif) en cas d'échec de la connexion Wi-Fi
  ap:
    ssid: !secret MF_ap_ssid
    password: !secret MF_ap_password

# SCRIPT TO UPDATE SCREEN / SCRIPT POUR METTRE À JOUR L'ÉCRAN
script:
  - id: update_screen
    then:
      - component.update: eink_display

# SCREEN UPDATE TIMES / HEURES DE MISE À JOUR DE L'ÉCRAN
time:
  - platform: homeassistant
    id: homeassistant_time
    timezone: Europe/Paris

    on_time:
      # 08:00
      - seconds: 0
        minutes: 0
        hours: 8
        then:
          - script.execute: update_screen
      # 12:00
      - seconds: 0
        minutes: 0
        hours: 12
        then:
          - script.execute: update_screen
      # 16:00
      - seconds: 0
        minutes: 0
        hours: 16
        then:
          - script.execute: update_screen
      # 20:00
      - seconds: 0
        minutes: 0
        hours: 20
        then:
          - script.execute: update_screen
      # 00:00
      - seconds: 0
        minutes: 0
        hours: 0
        then:
          - script.execute: update_screen

# QR CODE FOR GUEST WIFI ACCESS / CODE QR POUR L'ACCÈS WIFI INVITÉ
qr_code:
  - id: homepage_qr
    value: !secret MF_qr_value

# INCLUDE CUSTOM FONTS / INCLURE DES POLICES PERSONNALISÉES
font:
  ################# REGULAR #################
  - file:
      type: gfonts
      family: Noto+Sans
      weight: 500
    id: Noto_1
    size: 20
    glyphs: &font-glyphs [ # --> https://codepoints.net/
      0,1,2,3,4,5,6,7,8,9,
      A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,
      a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,
      à,â,ç,é,è,ê,ù,û,À,Â,Ç,É,È,Ê,Ù,Û,
      "\u0020", #space
      "\u0021", #!
      "\u0022", #"
      "\u0025", #%
      "\u0026", #&
      "\u0027", #'
      "\u0028", #(
      "\u0029", #)
      "\u002B", #+
      "\u002D", #-
      "\u002E", #.
      "\u003A", #:
      "\u003D", #=
      "\u003F", #?
      "\u0040", #@
      "\u005B", #[
      "\u005D", #]
      "\u005F", #_
      "\u00B0", #°
      ]
    
  ################## BOLD ################## 
  - file:
      type: gfonts
      family: Noto+Sans
      weight: 800
    id: Noto_2
    size: 55
    glyphs: *font-glyphs
  - file:
      type: gfonts
      family: Noto+Sans
      weight: 800
    id: Noto_3
    size: 35
    glyphs: *font-glyphs
  - file:
      type: gfonts
      family: Noto+Sans
      weight: 800
    id: Noto_4
    size: 25
    glyphs: *font-glyphs
  - file:
      type: gfonts
      family: Noto+Sans
      weight: 800
    id: Noto_5
    size: 20
    glyphs: *font-glyphs
  - file:
      type: gfonts
      family: Noto+Sans
      weight: 700
    id: Noto_6
    size: 15
    glyphs: *font-glyphs
    extras: # Enables emoji support / Active la prise en charge des emojis
      - file: # --> https://fonts.google.com/noto/specimen/Noto+Emoji/tester
          type: gfonts
          family: Noto+Emoji
          weight: 700
        glyphs: [ # --> https://www.unicode.org/emoji/charts/full-emoji-list.html
          "\u2665", #heart suit
          "\u2764", #red heart
          "\U0001F60D", #smiling face with heart-eyes
          "\U0001F356", #meat on bone
          "\U0001F357", #poultry leg
          "\U0001F467", #girl
          "\U0001F476", #baby
          "\U0001F618", #face blowing a kiss
          "\U0001F63B", #smiling cat with heart-eyes
          "\U0001F969", #cut of meat
          "\U0001F970", #smiling face with hearts
          "\U0001F973", #partying face
        ]
  # Include Material Design Icons font / Inclure la police des icônes Material Design (v.7.4.47 --> https://github.com/Pictogrammers/pictogrammers.github.io/tree/main/%40mdi/font)
  - file: "fonts/materialdesignicons-webfont.ttf"
    id: MDI_120
    size: 120
    glyphs: &mdi-glyphs # --> https://pictogrammers.com/library/mdi/
      # All weather pictograms / Tous les pictogrammes météo
      - "\U000F0590" # mdi-weather-cloudy
      - "\U000F0F2F" # mdi-weather-cloudy-alert
      - "\U000F0E6E" # mdi-weather-cloudy-arrow-right
      - "\U000F18F6" # mdi-weather-cloudy-clock
      - "\U000F1B5A" # mdi-weather-dust
      - "\U000F0591" # mdi-weather-fog
      - "\U000F0592" # mdi-weather-hail
      - "\U000F0F30" # mdi-weather-hazy
      - "\U000F0898" # mdi-weather-hurricane
      - "\U000F1C78" # mdi-weather-hurricane-outline
      - "\U000F0593" # mdi-weather-lightning
      - "\U000F067E" # mdi-weather-lightning-rainy
      - "\U000F1D15" # mdi-weather-moonset
      - "\U000F1D16" # mdi-weather-moonset-down
      - "\U000F1D17" # mdi-weather-moonset-up
      - "\U000F0594" # mdi-weather-night
      - "\U000F0F31" # mdi-weather-night-partly-cloudy
      - "\U000F0595" # mdi-weather-partly-cloudy
      - "\U000F0F32" # mdi-weather-partly-lightning
      - "\U000F0F33" # mdi-weather-partly-rainy
      - "\U000F0F34" # mdi-weather-partly-snowy
      - "\U000F0F35" # mdi-weather-partly-snowy-rainy
      - "\U000F0596" # mdi-weather-pouring
      - "\U000F0597" # mdi-weather-rainy
      - "\U000F0598" # mdi-weather-snowy
      - "\U000F0F36" # mdi-weather-snowy-heavy
      - "\U000F067F" # mdi-weather-snowy-rainy
      - "\U000F0599" # mdi-weather-sunny
      - "\U000F0F37" # mdi-weather-sunny-alert
      - "\U000F14E4" # mdi-weather-sunny-off
      - "\U000F059A" # mdi-weather-sunset
      - "\U000F059B" # mdi-weather-sunset-down
      - "\U000F059C" # mdi-weather-sunset-up
      - "\U000F0F38" # mdi-weather-tornado
      - "\U000F059D" # mdi-weather-windy
      - "\U000F059E" # mdi-weather-windy-variant
      
      # Other pictograms / Autres pictogrammes
      - "\U000F0A70" # mdi-silverware-fork-knife
      - "\U000F04B9" # mdi-sofa
      - "\U000F02B4" # mdi-controller
      - "\U000F1239" # mdi-desk
      - "\U000F0FD2" # mdi-bed-king
      - "\U000F16BF" # mdi-wifi-lock

  - file: "fonts/materialdesignicons-webfont.ttf"
    id: MDI_36
    size: 36
    glyphs: *mdi-glyphs
  - file: "fonts/materialdesignicons-webfont.ttf"
    id: MDI_20
    size: 20
    glyphs: *mdi-glyphs

# LIST OF SENSORS / LISTE DES CAPTEURS
sensor:
  # Weather forecast / Prévisions météo
  - platform: homeassistant
    entity_id: weather.forecast_YourCity # Entity ID of your weather forecast app. / ID d'entité de votre application de prévisions météo
    attribute: temperature
    id: weather_temperature
  - platform: homeassistant
    entity_id: sensor.weather_temperature_1
    id: weather_temperature_1
  - platform: homeassistant
    entity_id: sensor.weather_templow_1
    id: weather_templow_1
  - platform: homeassistant
    entity_id: sensor.weather_temperature_2
    id: weather_temperature_2
  - platform: homeassistant
    entity_id: sensor.weather_templow_2
    id: weather_templow_2
  - platform: homeassistant
    entity_id: sensor.weather_temperature_3
    id: weather_temperature_3
  - platform: homeassistant
    entity_id: sensor.weather_templow_3
    id: weather_templow_3
  - platform: homeassistant
    entity_id: sensor.weather_temperature_4
    id: weather_temperature_4
  - platform: homeassistant
    entity_id: sensor.weather_templow_4
    id: weather_templow_4
  - platform: homeassistant
    entity_id: sensor.weather_temperature_5
    id: weather_temperature_5
  - platform: homeassistant
    entity_id: sensor.weather_templow_5
    id: weather_templow_5
  - platform: homeassistant
    entity_id: sensor.weather_temperature_6
    id: weather_temperature_6
  - platform: homeassistant
    entity_id: sensor.weather_templow_6
    id: weather_templow_6
    
  # Home sensors / Capteurs domestiques
  - platform: homeassistant
    entity_id: sensor.salle_a_manger_temperature # Entity ID of your temperature sensor / ID d'entité de votre capteur de température
    id: salle_a_manger_temperature
  - platform: homeassistant
    entity_id: sensor.salle_a_manger_humidite # Entity ID of your humidity sensor / ID d'entité de votre capteur d'humidité
    id: salle_a_manger_humidity
  - platform: homeassistant
    entity_id: sensor.salon_temperature # Entity ID of your temperature sensor / ID d'entité de votre capteur de température
    id: salon_temperature
  - platform: homeassistant
    entity_id: sensor.salon_humidite # Entity ID of your humidity sensor / ID d'entité de votre capteur d'humidité
    id: salon_humidity
  - platform: homeassistant
    entity_id: sensor.bureau_1_temperature # Entity ID of your temperature sensor / ID d'entité de votre capteur de température
    id: bureau_1_temperature
  - platform: homeassistant
    entity_id: sensor.bureau_1_humidite # Entity ID of your humidity sensor / ID d'entité de votre capteur d'humidité
    id: bureau_1_humidity
  - platform: homeassistant
    entity_id: sensor.bureau_2_temperature # Entity ID of your temperature sensor / ID d'entité de votre capteur de température
    id: bureau_2_temperature
  - platform: homeassistant
    entity_id: sensor.bureau_2_humidite # Entity ID of your humidity sensor / ID d'entité de votre capteur d'humidité
    id: bureau_2_humidity
  - platform: homeassistant
    entity_id: sensor.chambre_temperature # Entity ID of your temperature sensor / ID d'entité de votre capteur de température
    id: chambre_temperature
  - platform: homeassistant
    entity_id: sensor.chambre_humidite # Entity ID of your humidity sensor / ID d'entité de votre capteur d'humidité
    id: chambre_humidity

text_sensor: 
  # Time and date / Heure et date
  - platform: homeassistant
    entity_id: sensor.date_fr
    id: date_fr
  - platform: homeassistant
    entity_id: sensor.date_time_iso
    id: date_time_iso
    
  # Weather forecast / Prévisions météo
  - platform: homeassistant
    entity_id: weather.forecast_YourCity # Entity ID of your weather forecast app. / ID d'entité de votre application de prévisions météo
    id: weather_name
  - platform: homeassistant
    entity_id: sensor.weather_day_1
    id: weather_day_1
  - platform: homeassistant
    entity_id: sensor.weather_condition_1
    id: weather_condition_1
  - platform: homeassistant
    entity_id: sensor.weather_day_2
    id: weather_day_2
  - platform: homeassistant
    entity_id: sensor.weather_condition_2
    id: weather_condition_2
  - platform: homeassistant
    entity_id: sensor.weather_day_3
    id: weather_day_3
  - platform: homeassistant
    entity_id: sensor.weather_condition_3
    id: weather_condition_3
  - platform: homeassistant
    entity_id: sensor.weather_day_4
    id: weather_day_4
  - platform: homeassistant
    entity_id: sensor.weather_condition_4
    id: weather_condition_4
  - platform: homeassistant
    entity_id: sensor.weather_day_5
    id: weather_day_5
  - platform: homeassistant
    entity_id: sensor.weather_condition_5
    id: weather_condition_5
  - platform: homeassistant
    entity_id: sensor.weather_day_6
    id: weather_day_6
  - platform: homeassistant
    entity_id: sensor.weather_condition_6
    id: weather_condition_6
    
  # Calendar events / Calendrier des événements
  - platform: homeassistant
    entity_id: sensor.event_start_1
    id: event_start_1
  - platform: homeassistant
    entity_id: sensor.event_summary_1
    id: event_summary_1
  - platform: homeassistant
    entity_id: sensor.event_start_2
    id: event_start_2
  - platform: homeassistant
    entity_id: sensor.event_summary_2
    id: event_summary_2
  - platform: homeassistant
    entity_id: sensor.event_start_3
    id: event_start_3
  - platform: homeassistant
    entity_id: sensor.event_summary_3
    id: event_summary_3
  - platform: homeassistant
    entity_id: sensor.event_start_4
    id: event_start_4
  - platform: homeassistant
    entity_id: sensor.event_summary_4
    id: event_summary_4
  - platform: homeassistant
    entity_id: sensor.event_start_5
    id: event_start_5
  - platform: homeassistant
    entity_id: sensor.event_summary_5
    id: event_summary_5

# PINS FOR WAVESHARE EPAPER ESP BOARD / BROCHES POUR CARTE ESP EPAPER WAVESHARE
spi:
  clk_pin: 13
  mosi_pin: 14

# RENDER ON E-PAPER SCREEN / AFFICHAGE SUR ÉCRAN E-PAPER
display:
  - platform: waveshare_epaper
    id: eink_display
    cs_pin: 15
    dc_pin: 27
    busy_pin:
      number: 25
      inverted: true
    reset_pin: 26
    reset_duration: 2ms
    model: 7.50inv2
    rotation: 270°
    update_interval: never
    lambda: |-
    
     std::map<std::string, std::string> icon_map
        {
          // Weather conditions / Conditions météo --> https://www.home-assistant.io/integrations/weather/#condition-mapping
          {"clear-night", "\U000F0594"},
          {"cloudy", "\U000F0590"},
          {"fog", "\U000F0591"},
          {"hail", "\U000F0592"},
          {"lightning", "\U000F0593"},
          {"lightning-rainy", "\U000F067E"},
          {"partlycloudy", "\U000F0595"},
          {"pouring", "\U000F0596"},
          {"rainy", "\U000F0597"},
          {"snowy", "\U000F0598"},
          {"snowy-rainy", "\U000F067F"},
          {"sunny", "\U000F0599"},
          {"windy", "\U000F059D"},
          {"windy-variant", "\U000F059E"},
          {"exceptional", "\U000F0F2F"},

          // Others / Autres
          {"salle à manger", "\U000F0A70"},  //Dining room
          {"salon", "\U000F04B9"},           //Living room
          {"bureau 1", "\U000F02B4"},        //Office 1
          {"bureau 2", "\U000F1239"},        //Office 2
          {"chambre", "\U000F0FD2"},         //Bedroom
          {"wifi-signal", "\U000F16BF"},
        };

     std::map<std::string, std::string> traduction
        {
          // Weather conditions translation EN to FR / Traduction des conditions météo EN -> FR
          {"clear-night", "Nuit claire"},
          {"cloudy", "Nuageux"},
          {"fog", "Brouillard"},
          {"hail", "Grêle"},
          {"lightning", "Orage"},
          {"lightning-rainy", "Orageux"},
          {"partlycloudy", "Nuageux"},
          {"pouring", "À verse"},
          {"rainy", "Pluvieux"},
          {"snowy", "Neigeux"},
          {"snowy-rainy", "Neigeux"},
          {"sunny", "Ensoleillé"},
          {"windy", "Venteux"},
          {"windy-variant", "Venteux"},
          {"exceptional", "Alerte"}

          //Days of week translation EN to FR / Traduction des jours de la semaine EN -> FR
          {"Mon", "Lun"},{"Tue", "Mar"},{"Wed", "Mer"},{"Thu", "Jeu"},{"Fri", "Ven"},{"Sat", "Sam"},{"Sun", "Dim"},
        };
        
     // Date
     it.printf(240, 40, id(NotoBold_35), TextAlign::TOP_CENTER, "%s", id(date_fr).state.c_str());


     it.filled_rectangle(50, 85, 380, 2);

     
     // Weather when the screen was last updated / Météo lors de la dernière mise à jour de l'écran
     it.printf(140, 100, id(MDI_120), TextAlign::TOP_CENTER, "%s", icon_map[id(weather_name).state].c_str());
     it.printf(220, 110, id(NotoBold_35), TextAlign::TOP_LEFT, "%s", traduction[id(weather_name).state].c_str());
     it.printf(220, 150, id(NotoBold_55), TextAlign::TOP_LEFT, "%2.1f°C", id(weather_temperature).state);

     // 5-day weather forecast (day 1 = today) / Prévisions météo à 5 jours (day 1 = aujourd'hui)
     it.printf(85, 235, id(NotoBold_25), TextAlign::TOP_CENTER, "%s", traduction[id(weather_day_1).state].c_str());
     it.printf(85, 265, id(MDI_36), TextAlign::TOP_CENTER, "%s", icon_map[id(weather_condition_1).state].c_str());
     it.printf(85, 305, id(NotoBold_20), TextAlign::TOP_CENTER, "%2.1f°C", id(weather_temperature_1).state);
     it.printf(85, 325, id(NotoReg_20), TextAlign::TOP_CENTER, "%2.1f°C", id(weather_templow_1).state);

     it.printf(162, 235, id(NotoBold_25), TextAlign::TOP_CENTER, "%s", traduction[id(weather_day_2).state].c_str());
     it.printf(162, 265, id(MDI_36), TextAlign::TOP_CENTER, "%s", icon_map[id(weather_condition_2).state].c_str());
     it.printf(162, 305, id(NotoBold_20), TextAlign::TOP_CENTER, "%2.1f°C", id(weather_temperature_2).state);
     it.printf(162, 325, id(NotoReg_20), TextAlign::TOP_CENTER, "%2.1f°C", id(weather_templow_2).state);

     it.printf(240, 235, id(NotoBold_25), TextAlign::TOP_CENTER, "%s", traduction[id(weather_day_3).state].c_str());
     it.printf(240, 265, id(MDI_36), TextAlign::TOP_CENTER, "%s", icon_map[id(weather_condition_3).state].c_str());
     it.printf(240, 305, id(NotoBold_20), TextAlign::TOP_CENTER, "%2.1f°C", id(weather_temperature_3).state);
     it.printf(240, 325, id(NotoReg_20), TextAlign::TOP_CENTER, "%2.1f°C", id(weather_templow_3).state);

     it.printf(318, 235, id(NotoBold_25), TextAlign::TOP_CENTER, "%s", traduction[id(weather_day_4).state].c_str());
     it.printf(318, 265, id(MDI_36), TextAlign::TOP_CENTER, "%s", icon_map[id(weather_condition_4).state].c_str());
     it.printf(318, 305, id(NotoBold_20), TextAlign::TOP_CENTER, "%2.1f°C", id(weather_temperature_4).state);
     it.printf(318, 325, id(NotoReg_20), TextAlign::TOP_CENTER, "%2.1f°C", id(weather_templow_4).state);

     it.printf(395, 235, id(NotoBold_25), TextAlign::TOP_CENTER, "%s", traduction[id(weather_day_5).state].c_str());
     it.printf(395, 265, id(MDI_36), TextAlign::TOP_CENTER, "%s", icon_map[id(weather_condition_5).state].c_str());
     it.printf(395, 305, id(NotoBold_20), TextAlign::TOP_CENTER, "%2.1f°C", id(weather_temperature_5).state);
     it.printf(395, 325, id(NotoReg_20), TextAlign::TOP_CENTER, "%2.1f°C", id(weather_templow_5).state);


     it.filled_rectangle(50, 360, 380, 2);


     // Temperature and humidity at home / Température et humidité à la maison
     it.printf(85, 370, id(MDI_36), TextAlign::TOP_CENTER, "%s", icon_map["salle à manger"].c_str());
     it.printf(85, 410, id(NotoBold_20), TextAlign::TOP_CENTER, "%2.1f°C", id(salle_a_manger_temperature).state);
     it.printf(85, 430, id(NotoReg_20), TextAlign::TOP_CENTER, "%2.1f%%", id(salle_a_manger_humidity).state);

     it.printf(162, 370, id(MDI_36), TextAlign::TOP_CENTER, "%s", icon_map["salon"].c_str());
     it.printf(162, 410, id(NotoBold_20), TextAlign::TOP_CENTER, "%2.1f°C", id(salon_temperature).state);
     it.printf(162, 430, id(NotoReg_20), TextAlign::TOP_CENTER, "%2.1f%%", id(salon_humidity).state);
     
     it.printf(240, 370, id(MDI_36), TextAlign::TOP_CENTER, "%s", icon_map["bureau 1"].c_str());
     it.printf(240, 410, id(NotoBold_20), TextAlign::TOP_CENTER, "%2.1f°C", id(bureau_1_temperature).state);
     it.printf(240, 430, id(NotoReg_20), TextAlign::TOP_CENTER, "%2.1f%%", id(bureau_1_humidity).state);

     it.printf(318, 370, id(MDI_36), TextAlign::TOP_CENTER, "%s", icon_map["bureau 2"].c_str());
     it.printf(318, 410, id(NotoBold_20), TextAlign::TOP_CENTER, "%2.1f°C", id(bureau_2_temperature).state);
     it.printf(318, 430, id(NotoReg_20), TextAlign::TOP_CENTER, "%2.1f%%", id(bureau_2_humidity).state);

     it.printf(395, 370, id(MDI_36), TextAlign::TOP_CENTER, "%s", icon_map["chambre"].c_str());
     it.printf(395, 410, id(NotoBold_20), TextAlign::TOP_CENTER, "%2.1f°C", id(chambre_temperature).state);
     it.printf(395, 430, id(NotoReg_20), TextAlign::TOP_CENTER, "%2.1f%%", id(chambre_humidity).state);


     it.filled_rectangle(50, 460, 380, 2);
     

     // Next 5 events on the calendar / 5 prochains événements du calendrier
     it.printf(55, 470, id(NotoBold_20), TextAlign::TOP_LEFT, "%s", id(event_start_1).state.c_str());
     it.printf(55, 490, id(NotoBold_15), TextAlign::TOP_LEFT, "%s", id(event_summary_1).state.c_str());

     it.printf(55, 510, id(NotoBold_20), TextAlign::TOP_LEFT, "%s", id(event_start_2).state.c_str());
     it.printf(55, 530, id(NotoBold_15), TextAlign::TOP_LEFT, "%s", id(event_summary_2).state.c_str());

     it.printf(55, 550, id(NotoBold_20), TextAlign::TOP_LEFT, "%s", id(event_start_3).state.c_str());
     it.printf(55, 570, id(NotoBold_15), TextAlign::TOP_LEFT, "%s", id(event_summary_3).state.c_str());

     it.printf(55, 590, id(NotoBold_20), TextAlign::TOP_LEFT, "%s", id(event_start_4).state.c_str());
     it.printf(55, 610, id(NotoBold_15), TextAlign::TOP_LEFT, "%s", id(event_summary_4).state.c_str());

     it.printf(55, 630, id(NotoBold_20), TextAlign::TOP_LEFT, "%s", id(event_start_5).state.c_str());
     it.printf(55, 650, id(NotoBold_15), TextAlign::TOP_LEFT, "%s", id(event_summary_5).state.c_str());


     it.filled_rectangle(50, 680, 380, 2);

     
     // Guest wifi QR code / QR code wifi invité
     it.qr_code(55, 700, id(homepage_qr), Color(255,255,255), 2);
     it.printf(125, 700, id(NotoBold_15), TextAlign::TOP_LEFT, "Connexion auto à YourGuestWIFI_SSID");               //Wifi connection YourGuestWifi_SSID
     it.printf(125, 724, id(MDI_36), TextAlign::TOP_LEFT, "%s", icon_map["wifi-signal"].c_str());

     // Last screen update date / Date de la dernière mise à jour à l'écran
     it.printf(320, 740, id(NotoBold_15), TextAlign::TOP_RIGHT, "Mis à jour le :");                                         //Updated on
     it.strftime(320, 740, id(NotoBold_15), TextAlign::TOP_LEFT, " %d-%m à %H:%M", id(homeassistant_time).now());

captive_portal:
